{
  "_args": [
    [
      {
        "raw": "electron-prebuilt@^0.29.2",
        "scope": null,
        "escapedName": "electron-prebuilt",
        "name": "electron-prebuilt",
        "rawSpec": "^0.29.2",
        "spec": ">=0.29.2 <0.30.0",
        "type": "range"
      },
      "/home/alan/devel/out/banks/stellar/create_account/node_modules/stellar"
    ]
  ],
  "_from": "electron-prebuilt@>=0.29.2 <0.30.0",
  "_id": "electron-prebuilt@0.29.2",
  "_inCache": true,
  "_location": "/electron-prebuilt",
  "_nodeVersion": "2.2.1",
  "_npmUser": {
    "name": "maxogden",
    "email": "max@maxogden.com"
  },
  "_npmVersion": "2.11.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "electron-prebuilt@^0.29.2",
    "scope": null,
    "escapedName": "electron-prebuilt",
    "name": "electron-prebuilt",
    "rawSpec": "^0.29.2",
    "spec": ">=0.29.2 <0.30.0",
    "type": "range"
  },
  "_requiredBy": [
    "/stellar"
  ],
  "_resolved": "https://registry.npmjs.org/electron-prebuilt/-/electron-prebuilt-0.29.2.tgz",
  "_shasum": "1997cbf22c1edc22de4650917b33450c8201dbe2",
  "_shrinkwrap": null,
  "_spec": "electron-prebuilt@^0.29.2",
  "_where": "/home/alan/devel/out/banks/stellar/create_account/node_modules/stellar",
  "author": {
    "name": "Mathias Buus"
  },
  "bin": {
    "electron": "cli.js"
  },
  "bugs": {
    "url": "https://github.com/mafintosh/electron-prebuilt/issues"
  },
  "dependencies": {
    "electron-download": "^1.0.0",
    "extract-zip": "^1.0.3"
  },
  "description": "Install electron (formerly called atom-shell) prebuilts using npm",
  "devDependencies": {
    "home-path": "^0.1.1",
    "path-exists": "^1.0.0",
    "tape": "^3.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "1997cbf22c1edc22de4650917b33450c8201dbe2",
    "tarball": "https://registry.npmjs.org/electron-prebuilt/-/electron-prebuilt-0.29.2.tgz"
  },
  "homepage": "https://github.com/mafintosh/electron-prebuilt",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "maxogden",
      "email": "max@maxogden.com"
    },
    {
      "name": "mafintosh",
      "email": "mathiasbuus@gmail.com"
    },
    {
      "name": "zcbenz",
      "email": "zcbenz@gmail.com"
    },
    {
      "name": "mattdesl",
      "email": "dave.des@gmail.com"
    }
  ],
  "name": "electron-prebuilt",
  "optionalDependencies": {},
  "readme": "# electron-prebuilt\n\n[![build status](http://img.shields.io/travis/mafintosh/electron-prebuilt.svg?style=flat)](http://travis-ci.org/mafintosh/electron-prebuilt)\n\nInstall [electron](https://github.com/atom/electron) (formerly called **atom-shell**) prebuilt binaries for command-line use using npm.\n\nWorks on Mac, Windows and Linux OSes that Electron supports (e.g. Electron [does not support Windows XP](https://github.com/atom/electron/issues/691)).\n\nElectron is a javascript runtime that bundles Node.js and Chromium. You use it similar to the `node` command on the command line for executing javascript programs. This module helps you easily install the `electron` command for use on the command line without having to compile anything.\n\n## Installation\n\nDownload and install the latest build of electron for your OS and add it to your projects `package.json` as a `devDependency`:\n\n```\nnpm install electron-prebuilt --save-dev\n```\n\nThis is the preferred way to use electron, as it doesn't require users to install electron globally.\n\nYou can also use the `-g` flag (global) to symlink it into your PATH:\n\n```\nnpm install -g electron-prebuilt\n```\n\nIf that command fails with an `EACCESS` error you may have to run it again with `sudo`:\n\n```\nsudo npm install -g electron-prebuilt\n```\n\nNow you can just run `electron` to run electron:\n\n```\nelectron\n```\n\nIf you need to use an HTTP proxy you can [set these environment variables](https://github.com/request/request/tree/f0c4ec061141051988d1216c24936ad2e7d5c45d#controlling-proxy-behaviour-using-environment-variables)\n\n## Usage\n\nFirst you have to [write an electron application](https://github.com/atom/electron/blob/master/docs/tutorial/quick-start.md)\n\nThen you can run your app using:\n\n```\nelectron your-app/\n```\n\n## Programmatic usage\n\nIf you require `electron-prebuilt` inside your node app it will return the file path to the binary.\nUse this to spawn electron\n\n``` js\nvar electron = require('electron-prebuilt')\nvar proc = require('child_process')\n\n// will something similar to print /Users/maf/.../Electron\nconsole.log(electron)\n\n// spawn electron\nvar child = proc.spawn(electron)\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mafintosh/electron-prebuilt.git"
  },
  "scripts": {
    "cache-clean": "rm -rf ~/.electron && rm -rf dist",
    "postinstall": "node install.js",
    "pretest": "npm run cache-clean && node install.js",
    "test": "tape test/*.js"
  },
  "version": "0.29.2"
}
